<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.02</doclet-version-NOT-library-version>
    <class>
        <name>flm.b4a.animationplus.TransitionDrawable</name>
        <shortname>TransitionDrawable</shortname>
        <objectwrapper>android.graphics.drawable.TransitionDrawable</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the TransitionDrawable.
&lt;B&gt;Layer1&lt;/B&gt;: the drawable (or bitmap) to display first.
&lt;B&gt;Layer2&lt;/B&gt;: the drawable (or bitmap) displayed after a transition.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Layer1</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Layer2</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>ShowFirstLayer</name>
            <comment>Shows only the first layer.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ReverseTransition_2To1</name>
            <comment>Reverses the transition, picking up where the transition currently is. If the transition is not currently running, this will start the transition with the specified duration. If the transition is already running, the last known duration will be used.
&lt;B&gt;Duration&lt;/B&gt;: the duration to use if no transition is running.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>StartTransition_1To2</name>
            <comment>Starts the cross-fade sequence to display the second layer on top of the first layer.
&lt;B&gt;Duration&lt;/B&gt;: the length of the transition in milliseconds.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>CrossFadeEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets/sets whether the cross fade is enabled for this transition.
When cross fade is disabled, the first drawable is always drawn opaque. With cross fade enabled, the first drawable is drawn with the opposite alpha of the second drawable. Cross fade is disabled by default.</comment>
        </property>
    </class>
    <class>
        <name>flm.b4a.animationplus.LayerDrawable</name>
        <shortname>LayerDrawable</shortname>
        <objectwrapper>android.graphics.drawable.LayerDrawable</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the LayerDrawable.
&lt;B&gt;Layers&lt;/B&gt;: an array of drawables (or bitmaps) to draw together.
The element with the largest index will be drawn on top.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Layers</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>SetAlpha</name>
            <comment>Sets the opacity of the layer at the given index.
You should invalidate the view displaying the layerdrawable after using this function.
Value: Value of the alpha channel between 0 and 255.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ChangeLayer</name>
            <comment>Changes the layer (drawable or bitmap) at the given index.
Returns True if the layer was replaced or False if the index was not found.
You should invalidate the view displaying the layerdrawable after using this function.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Layer</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>GetDrawable</name>
            <comment>Returns the drawable at the specified layer index.</comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>NumberOfLayers</name>
            <returntype>int</returntype>
            <comment>Returns the number of layers contained within the LayerDrawable.</comment>
        </property>
    </class>
    <class>
        <name>flm.b4a.animationplus.ClipDrawable</name>
        <shortname>ClipDrawable</shortname>
        <objectwrapper>android.graphics.drawable.ClipDrawable</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the ClipDrawable.
&lt;B&gt;Drawable&lt;/B&gt;: the drawable or bitmap to clip.
&lt;B&gt;Gravity&lt;/B&gt;: where to clip within the drawable.
&lt;B&gt;Orientation&lt;/B&gt;: one of the two orientation constants (horizontal or vertical).
&lt;B&gt;StartLevel&lt;/B&gt;: the initial clipping level.
The drawable is clipped completely and not visible when the level is 0 and fully revealed when the level is 10000.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Drawable</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Gravity</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Orientation</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>StartLevel</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Level</name>
            <returntype>int</returntype>
            <parameter>
                <name>Level</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the clipping level. 
The drawable is clipped completely and not visible when the level is 0 and fully revealed when the level is 10000.</comment>
        </property>
        <field>
            <name>ORIENTATION_HORIZONTAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ORIENTATION_VERTICAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>flm.b4a.animationplus.AnimationSet</name>
        <shortname>AnimationSet</shortname>
        <objectwrapper>android.view.animation.AnimationSet</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the AnimationSet.
&lt;B&gt;ShareInterpolator&lt;/B&gt;: pass true if all of the animations in this set should use the interpolator associated with this AnimationSet. Pass false if each animation should use its own interpolator.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ShareInterpolator</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Start</name>
            <comment>Plays the added animations together.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>SetInterpolatorWithParam</name>
            <comment>Sets the acceleration curve for every child animation in the set. Defaults to a linear interpolation.
See &lt;I&gt;http://developer.android.com/reference/android/view/animation/Interpolator.html&lt;/I&gt; for further details.
This setting is ignored if you set ShareInterpolator to false when you initialized the set.
&lt;B&gt;Interpolator&lt;/B&gt;: one of the INTERPOLATOR constants.
&lt;B&gt;Param&lt;/B&gt;: factor or tension.
The Accelerate/Decelerate Interpolator and the Bounce Interpolator have no parameter.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Interpolator</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetInterpolator</name>
            <comment>Sets the acceleration curve for every child animation in the set. Defaults to a linear interpolation.
See &lt;I&gt;http://developer.android.com/reference/android/view/animation/Interpolator.html&lt;/I&gt; for further details.
This setting is ignored if you set ShareInterpolator to false when you initialized the set.
&lt;B&gt;Interpolator&lt;/B&gt;: one of the INTERPOLATOR constants.
The Cycle Interpolator cannot be used with this function because the parameter is mandatory.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Interpolator</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Stop</name>
            <comment>Stops all child animations.
Warning: stopping an animation set does not trigger the AnimationEnd event of the child animations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>AddAnimation</name>
            <comment>Adds a child animation to this animation set.
&lt;B&gt;Anim&lt;/B&gt;: animation to add.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Anim</name>
                <type>flm.b4a.animationplus.AnimationPlusWrapper</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>PersistAfter</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>persistAfter</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets/sets if the transformations that this animation set performed will persist when it is finished.</comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>long</returntype>
            <parameter>
                <name>Duration</name>
                <type>long</type>
            </parameter>
            <comment>Gets/sets the duration in milliseconds of every child animation.</comment>
        </property>
        <property>
            <name>StartOffset</name>
            <returntype>long</returntype>
            <parameter>
                <name>startOffset</name>
                <type>long</type>
            </parameter>
            <comment>Gets/sets when the animation set should begin after the Start function was called (in milliseconds).</comment>
        </property>
        <field>
            <name>INTERPOLATOR_ANTICIPATE_OVERSHOOT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_OVERSHOOT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_BOUNCE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_ACCELERATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_DECELERATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_ACCELERATE_DECELERATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_CYCLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_ANTICIPATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>flm.b4a.animationplus.AnimationPlusWrapper</name>
        <shortname>AnimationPlus</shortname>
        <objectwrapper>android.view.animation.Animation</objectwrapper>
        <owner>activity</owner>
        <event>AnimationEnd</event>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>MyView</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>PauseTranslation</name>
            <comment>Pauses a translation animation.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetInterpolatorWithParam</name>
            <comment>Sets the acceleration curve for this animation. Defaults to a linear interpolation.
See &lt;I&gt;http://developer.android.com/reference/android/view/animation/Interpolator.html&lt;/I&gt; for further details.
&lt;B&gt;Interpolator&lt;/B&gt;: one of the INTERPOLATOR constants.
&lt;B&gt;Param&lt;/B&gt;: factor or tension.
The Accelerate/Decelerate Interpolator and the Bounce Interpolator have no parameter.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Interpolator</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetInterpolator</name>
            <comment>Sets the acceleration curve for this animation. Defaults to a linear interpolation.
See &lt;I&gt;http://developer.android.com/reference/android/view/animation/Interpolator.html&lt;/I&gt; for further details.
&lt;B&gt;Interpolator&lt;/B&gt;: one of the INTERPOLATOR constants.
The Cycle Interpolator cannot be used with this function because the parameter is mandatory.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Interpolator</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeRotateCenter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>InitializeScaleCenter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg6</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>InitializeRotate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Stop</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>InitializeScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ResumeTranslation</name>
            <comment>Resumes a paused translation animation.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>InitializeTranslate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FromDX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>FromDY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ToDX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ToDY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>InitializeAlpha</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>RepeatCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PersistAfter</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>persistAfter</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets/sets if the transformation that this animation performed will persist when it is finished.</comment>
        </property>
        <property>
            <name>RepeatMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StartOffset</name>
            <returntype>long</returntype>
            <parameter>
                <name>startOffset</name>
                <type>long</type>
            </parameter>
            <comment>Gets/sets when the animation should begin after the Start function was called (in milliseconds).</comment>
        </property>
        <property>
            <name>IsPaused</name>
            <returntype>boolean</returntype>
            <comment>Gets whether the translation animation is paused.</comment>
        </property>
        <field>
            <name>INTERPOLATOR_ANTICIPATE_OVERSHOOT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_OVERSHOOT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_DECELERATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_ACCELERATE_DECELERATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_CYCLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>REPEAT_REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>REPEAT_RESTART</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_ACCELERATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_BOUNCE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>REPEAT_INFINITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INTERPOLATOR_ANTICIPATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>flm.b4a.animationplus.AnimationDrawable</name>
        <shortname>AnimationDrawable</shortname>
        <objectwrapper>android.graphics.drawable.AnimationDrawable</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the AnimationDrawable.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Start</name>
            <comment>Starts the animation, looping if necessary. This method has no effect if the animation is running.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Stop</name>
            <comment>Stops the animation. This method has no effect if the animation is not running.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddFrame</name>
            <comment>Adds a frame to the animation
&lt;B&gt;Frame&lt;/B&gt;: the frame to add. It must be a drawable or a bitmap.
&lt;B&gt;Duration&lt;/B&gt;: how long in milliseconds the frame should appear.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Frame</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsRunning</name>
            <comment>Indicates whether the animation is currently running or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetCurrent</name>
            <comment>Returns the drawable currently displayed.</comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>GetDuration</name>
            <comment>Returns the duration in milliseconds of the frame at the specified index.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetFrame</name>
            <comment>Returns the drawable at the specified frame index.</comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetNumberOfFrames</name>
            <comment>Returns the number of frames in the animation</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>OneShot</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>OneShot</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets/sets whether the animation will play once.</comment>
        </property>
    </class>
    <version>2.3</version>
    <dependsOn>Animation</dependsOn>
</root>
