Version=6.25
NumberOfModules=1
Module1=Starter
Build1=Default,ice.apkmgr
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="19"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~
IconFile=
NumberOfFiles=0
NumberOfLibraries=2
Library1=core
Library2=phone
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.

End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Dim pm As PackageManager
	Dim lst As List
	Dim lv As ListView
	
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	'Activity.LoadLayout("Layout1")
	lv.Initialize("lv")
	lv.TwoLinesAndBitmap.ItemHeight=60dip
	
	Activity.AddView(lv,0,0,-1,-1)
	reqdata
End Sub
Sub reqdata
	lst=pm.GetInstalledPackages
	For i=0 To lst.Size-1
		
		Dim pkg As String=lst.Get(i)
		Log(pkg)
		Try
			Dim bd As BitmapDrawable=pm.GetApplicationIcon(pkg)
			lv.AddTwoLinesAndBitmap(pkg,pm.GetApplicationLabel(pkg),bd.Bitmap)
		Catch
			lv.AddTwoLinesAndBitmap(pkg,pm.GetApplicationLabel(pkg),Null)
		End Try
		
	Next
End Sub
Sub lv_ItemClick (Position As Int, Value As Object)
	Dim pkg As String=lst.Get(Position)
	Try
		StartActivity(pm.GetApplicationIntent(pkg))
	Catch
		tl(LastException.Message)
	End Try
End Sub
Sub tl(msg As String)
	ToastMessageShow(msg,False)
	Log(msg)
End Sub
Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub
